@model ComunidadPractica.Models.CursoModel
@{
    ViewBag.Title = "Formulario para proponer un curso";
}

<!doctype html>
<html lang="en">
<body>
    <br><br><br>
            <div class="container center" style="max-width: 50%; line-height: 2">



                <h1 style="font-size:2.5vw">@ViewBag.Title</h1>

                @if (ViewBag.Message != null)
                {
                    if (ViewBag.ExitoAlProponer == 0)
                    {
                        <div class=" alert-success">
                            <h4 style="font-size:1.5vw">@ViewBag.Message</h4>
                        </div>
                    }
                    else{
                        <div class="alert-danger">
                            <h4 style="font-size:1.5vw">@ViewBag.Message</h4>
                        </div>
                    }
                }

                <br>
                @using (Html.BeginForm("proponerUnCurso", "Curso", FormMethod.Post, new
                { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
            <form class="form-horizontal">
                <div class="form-group row">
                    <label class="col-lg-4 col-form-label">@Html.LabelFor(model => model.nombre, new { @class = "float-lg-right float-md-left float-sm-left float-xs-left ", @style = "  font-weight:bold; white-space:nowrap" })</label>
                    <div class="col-lg-8">
                        @Html.TextBoxFor(model => model.nombre, new { @class = "form-control", @style = "max-width:100%;" })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-lg-4 col-form-label">@Html.LabelFor(model => model.costo, new { @class = "float-lg-right float-md-left float-sm-left float-xs-left ", @style = "  font-weight:bold; white-space:nowrap" })</label>
                    <div class="col-lg-8">
                        @Html.TextBoxFor(model => model.costo, new { @class = "form-control", @style = "max-width:100%;", @type = "number", @min = "0", @step = "0.01", @value = "0", @title = "Por favor ingrese un costo válido"})
                        @Html.ValidationMessageFor(model => model.costo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-lg-4 col-form-label ml-auto">@Html.LabelFor(model => model.descripcion, new { @class = "float-lg-right float-md-left float-sm-left float-xs-left", @style = "font-weight:bold; white-space:nowrap" })</label>
                    <div class="col-lg-8">
                        @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control", @style = "height:200px; max-height:300px; min-height:200px; max-width:100%;", @maxlength = "600" })
                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                        <small id="descripcionAyuda" class="form-text text-muted">Máximo 600 caracteres.</small>
                    </div>
                </div>

                        <div class="form-group row">
                            <label class="col-lg-4 col-form-label ml-auto">@Html.LabelFor(model => model.contenidos, new { @class = "float-lg-right float-md-left float-sm-left float-xs-left", @style = " font-weight:bold; white-space:nowrap" })</label>
                            <div class="col-lg-8">
                                @Html.TextAreaFor(model => model.contenidos, new { @class = "form-control contenidos", @style = "height:200px; max-height:300px; min-height:200px; max-width:100%;", @maxlength = "5000" })
                                @Html.ValidationMessageFor(model => model.contenidos, "", new { @class = "text-danger" })
                                <small id="contenidosAyuda" class="form-text text-muted">Máximo 2000 caracteres.</small>
                            </div>
                        </div>

                <div class="form-group row">
                    <label class="col-lg-4 col-form-label">@Html.LabelFor(model => model.categorias, new { @class = "float-lg-right float-md-left float-sm-left float-xs-left", @style = "font-weight:bold; white-space:nowrap" })</label>
                    <div class="col-lg-8">
                        <select id="categorias" class="mul-select actualizar" data-val="true" data-val-required="Por favor agregar al menos una categoría." name="categorias" multiple="multiple" style="width:100%">
                            @foreach (string categoria in ViewBag.Categorias)
                            {
                                <option value=@categoria>@categoria</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.categorias, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-lg-4 col-form-label">@Html.LabelFor(model => model.topicos, new { @class = "float-lg-right float-md-left float-sm-left float-xs-left", @style = "font-weight:bold; white-space:nowrap" })</label><br />

                    <div class="col-lg-8">
                        <select id="topicos" class="mul-select" data-val="true" data-val-required="Por favor agregar al menos un tópico." name="topicos" multiple="multiple" style="width:100%">
                            @foreach (string topico in ViewBag.Topicos)
                            {
                                <option value=@topico>@topico</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.topicos, "", new { @class = "text-danger" })
                    </div>
                </div>

                <input type="submit" class="btn btn-dark" value="Enviar Formulario" />
            </form>
                }
            </div>

    <script>
        $(document).ready(function () {
            $(".mul-select").select2({
                placeholder: "- Sin selección -",
                tokenSeparators: ['/', ',', ';', " "]
            });
        });

        $(".contenidos").focus(function () {
            if (document.getElementById('contenidos').value === '') {
                document.getElementById('contenidos').value += '- ';
            }
        });
        $(".contenidos").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                document.getElementById('contenidos').value += '- ';
            }
            var txtval = document.getElementById('contenidos').value;
            if (txtval.substr(txtval.length - 1) == '\n') {
                document.getElementById('contenidos').value = txtval.substring(0, txtval.length - 1);
            }
        });
    </script>
    <script>
        $('.actualizar').change(function () {
        var values = $('.actualizar').find('option:selected').map(function () {
            return $(this).val()
        }).get();

            let list = null;
            for (let i = values.length - 1; i >= 0; i--) {
                list = { value: values[i], rest: list };
            }

            var encActionURL = '@Url.Action("proponerCurso", "Curso")';
            $.ajax({
                url: encActionURL,
                type: "POST",
                data: { 'categorias': values },
                cache: false,
                success: function (data) {

                    var select = document.getElementById("topicos");
                    var length = select.options.length;
                    for (i = length - 1; i >= 0; i--) {
                        select.options[i] = null;
                    }

                    var ddldist = $('#topicos');
                    $.each(data, function (val, text) {
                        ddldist.append(
                            $('<option></option>').val(text).html(text)
                        );
                    });
                    
                },
            });

        });
    </script>

</body>
</html>
